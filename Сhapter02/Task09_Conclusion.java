package ru.ereshchenko.MyJava.Сhapter02;

public class Task09_Conclusion {
    /*
        Заключение
• Арифметические операторы можно использовать для формирования выражений с двумя
    операндами для сложения (+), вычитания
    (-), умножения (*), деления (/) и деления по модулю (%).
• Операторы инкремента (++) и декремента (--) изменяют единственный операнд на единицу.
• Оператор присваивания (=) можно комбинировать с арифметическими операторами,
    чтобы выполнять арифметические вычисления, а затем присваивать результат.
• Операторы сравнения можно использовать для формирования выражений,
    оценивающих два операнда на равенство (==), неравенство (!=), больше (>) или меньше (<).
• Оператор присваивания может быть скомбинирован с операторами > и <,
    и он будет возвращать значение true при равенстве операндов.
• Логические операторы И (&&) и ИЛИ (||) формируют выражения,
    оценивающие два операнда и возвращающие логические значения
    true или false.
• Логический оператор ! возвращает обратную логическую величину от значения
    единственного операнда.
• Условный оператор ? : оценивает заданное логическое выражение
    и возвращает один из двух операндов в зависимости от результата.
• При оценке логических выражений на предмет истинности можно
    опускать знак == true.
• В сложных арифметических выражениях важно явно указывать
    порядок операторов с помощью добавления скобок.
• Во избежание синтаксических ошибок кавычки в строковых переменных нужно
    предварять управляющим оператором \.
• Управляющие последовательности \n (новая строка) и \t (табуляция) организуют
    простое форматирование вывода.
• В особых ситуациях для выполнения двоичных арифметических
    операций полезно использовать побитовые операторы.
     */
}
